import{m as v,v as N,n as u,r as S,e as y,w as k,p as n}from"./index-5e2885e4.js";import{u as _,a as b,b as j,c as w,D as F}from"./use-form-structure-b872a9e7.js";import{u as I,N as M}from"./index-4e4366ce.js";import{u as z,t as D}from"./index-2d941bf7.js";import{l as T}from"./lodash-11edae60.js";import{M as V}from"./index-0bca5bb9.js";import{N as C}from"./Form-6e61837b.js";import{N as p}from"./FormItem-7f69a4d7.js";import{N as h}from"./Input-1bbd5e95.js";import{N as R}from"./Select-94feec49.js";import"./Grid-7fd51304.js";import"./Space-d49acb7b.js";import"./next-frame-once-7035a838.js";import"./Checkbox-2d4945a3.js";import"./use-merged-state-d459d80e.js";import"./service-d19f0ccd.js";import"./use-compitable-248ca92d.js";import"./format-length-c9d165c6.js";import"./get-53588a31.js";import"./use-locale-ba0171d5.js";import"./Suffix-9f9d022f.js";import"./cssr-7767064c.js";import"./Popover-907f9950.js";import"./_baseMap-d2a29d52.js";import"./create-bbda4d67.js";import"./Empty-dd1b91e9.js";function O(s){const m=v(),{t:a}=N.useI18n(),t=u(),d=I(),e=S({model:{taskName:"",description:"",engine:u("SeaTunnel")},rules:{taskName:{required:!0,trigger:["input","blur"],validator:(o,i)=>{if(!i)return Error(a("project.synchronization_definition.task_name_validate"))}}},saving:!1,formStructure:u([]),formName:u(""),loading:!1});return{state:e,settingFormRef:t,handleValidate:async()=>{if(await t.value.validate(),!e.saving){e.saving=!0;try{const o={name:e.model.taskName,description:e.model.description,engine:e.model.engine,env:T.omit(e.model,["taskName","description","engine"])};await z(m.params.jobDefinitionCode,o),d.setDagInfo(o),s.emit("cancelModal")}finally{e.saving=!1}}},settingInit:async()=>{if(!e.loading){e.loading=!0;try{const o=d.getDagInfo;e.model.taskName=o.name,e.model.description=o.description;const i=await D(),l=JSON.parse(i),c=o.env?l.forms.map(r=>(r.defaultValue=o.env[r.field],r)):l.forms.map(r=>(r.field==="job.mode"&&(r.defaultValue=""),r));e.formName=l.name,Object.assign(e.model,_(c)),Object.assign(e.rules,b(c,e.model,a)),e.formStructure=j(l.apis?w(l.apis,c):c)}finally{e.loading=!1}}}}}const U={show:{type:Boolean,default:!1}},me=y({name:"TaskSettingModal",props:U,emits:["cancelModal"],setup(s,m){const{t:a}=N.useI18n(),{state:t,settingFormRef:d,handleValidate:e,settingInit:f}=O(m),g=()=>{m.emit("cancelModal")},o=()=>{e()};return k(()=>s.show,()=>{s.show&&f()}),()=>n(V,{title:a("project.synchronization_definition.setting"),show:s.show,onCancel:g,onConfirm:o,confirmLoading:t.saving},{default:()=>[n(M,{show:t.loading},{default:()=>[n(C,{model:t.model,rules:t.rules,ref:d},{default:()=>[n(p,{label:a("project.synchronization_definition.task_name"),path:"taskName"},{default:()=>[n(h,{value:t.model.taskName,"onUpdate:value":i=>t.model.taskName=i,placeholder:a("project.synchronization_definition.task_name_placeholder"),clearable:!0},null)]}),n(p,{label:a("project.synchronization_definition.description"),path:"description"},{default:()=>[n(h,{value:t.model.description,"onUpdate:value":i=>t.model.description=i,placeholder:a("project.synchronization_definition.description_placeholder"),clearable:!0},null)]}),n(p,{label:a("project.synchronization_definition.engine"),path:"engine"},{default:()=>[n(R,{value:t.model.engine,"onUpdate:value":i=>t.model.engine=i,options:[{value:"SeaTunnel",label:"SeaTunnel"}]},null)]}),t.formStructure.length>0&&n(F,{model:t.model,formStructure:t.formStructure,name:t.formName},null)]})]})]})}});export{me as TaskSettingModal};
